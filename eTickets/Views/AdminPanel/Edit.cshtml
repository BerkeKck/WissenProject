@model eTickets.Models.EditMovieViewModel

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-12">
            <div class="card shadow-lg no-hover">
                <div class="card-body">
                    <div class="row">
                        <!-- Eski ve Yeni Fotoğraf -->
                        <div class="col-md-4 d-flex flex-column align-items-center">
                            <!-- Eski Fotoğraf -->
                            <div class="mb-3 text-center">
                                <label>Eski Fotoğraf</label>
                                <img src="@($"/images/moviePhotos/{Model.PhotoUrl}")" class="img-fluid mb-3 rounded old-photo-preview" alt="@Model.MovieName" />
                            </div>

                            <!-- Yeni Fotoğraf -->
                            <div class="text-center">
                                <label>Yeni Fotoğraf (Opsiyonel)</label>
                                <input asp-for="NewPhotoUrl" type="file" class="form-control" onchange="previewNewPhoto(event)" />
                                <img id="newPhotoPreview" class="img-fluid mb-3 rounded new-photo-preview" alt="Yeni Fotoğraf Önizleme" style="display: none;" />
                                <span asp-validation-for="NewPhotoUrl" class="text-danger"></span>
                            </div>
                        </div>

                        <!-- Film Bilgileri -->
                        <div class="col-md-8">
                            <h5 class="text-warning">@Model.MovieName</h5>
                            <form id="editMovieForm" asp-action="Edit" method="post" enctype="multipart/form-data">
                                <input type="hidden" asp-for="Id" />

                                <div class="form-group">
                                    <label asp-for="MovieName"></label>
                                    <input asp-for="MovieName" class="form-control" />
                                    <span asp-validation-for="MovieName" class="text-danger"></span>
                                </div>

                                <div class="form-group">
                                    <label asp-for="ReleaseDate"></label>
                                    <input asp-for="ReleaseDate" class="form-control" type="date" />
                                    <span asp-validation-for="ReleaseDate" class="text-danger"></span>
                                </div>

                                <div class="form-group">
                                    <label asp-for="Duration"></label>
                                    <input asp-for="Duration" class="form-control" />
                                    <span asp-validation-for="Duration" class="text-danger"></span>
                                </div>

                                <div class="form-group">
                                    <label asp-for="Description"></label>
                                    <textarea asp-for="Description" class="form-control"></textarea>
                                    <span asp-validation-for="Description" class="text-danger"></span>
                                </div>

                                <!-- Aktör Baloncukları -->
                                <div class="form-group">
                                    <label>Actors</label>
                                    <div id="selectedActorsContainer" class="mb-2">
                                        @foreach (var actorId in Model.SelectedActorIds)
                                        {
                                            var actor = (ViewBag.Actors as SelectList).FirstOrDefault(a => a.Value == actorId.ToString());
                                            if (actor != null)
                                            {
                                                <div class="chip" id="actor-chip-@actor.Value">
                                                    @actor.Text
                                                    <span class="closebtn" onclick="removeChip('@actor.Value', 'actor-chip-', 'selectedActorsContainer')">&times;</span>
                                                    <input type="hidden" name="SelectedActorIds" value="@actor.Value" />
                                                </div>
                                            }
                                        }
                                    </div>
                                    <select id="actorsSelect" class="form-control">
                                        <option value="">Select Actors</option>
                                        @foreach (var actor in ViewBag.Actors as SelectList)
                                        {
                                            <option value="@actor.Value">@actor.Text</option>
                                        }
                                    </select>
                                </div>

                                <!-- Kategori Baloncukları -->
                                <div class="form-group">
                                    <label>Categories</label>
                                    <div id="selectedCategoriesContainer" class="mb-2">
                                        @foreach (var categoryId in Model.SelectedCategoryIds)
                                        {
                                            var category = (ViewBag.Categories as SelectList).FirstOrDefault(c => c.Value == categoryId.ToString());
                                            if (category != null)
                                            {
                                                <div class="chip" id="category-chip-@category.Value">
                                                    @category.Text
                                                    <span class="closebtn" onclick="removeChip('@category.Value', 'category-chip-', 'selectedCategoriesContainer')">&times;</span>
                                                    <input type="hidden" name="SelectedCategoryIds" value="@category.Value" />
                                                </div>
                                            }
                                        }
                                    </div>
                                    <select id="categoriesSelect" class="form-control">
                                        <option value="">Select Categories</option>
                                        @foreach (var category in ViewBag.Categories as SelectList)
                                        {
                                            <option value="@category.Value">@category.Text</option>
                                        }
                                    </select>
                                </div>

                                <div class="form-group text-center">
                                    <button type="submit" class="btn btn-warning btn-lg">Save Changes</button>
                                    <a asp-action="MovieList" class="btn btn-secondary btn-lg ml-2">Cancel</a>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        @await Html.PartialAsync("_ValidationScriptsPartial")
    }
    <script>
        function previewNewPhoto(event) {
            const input = event.target;
            const preview = document.getElementById('newPhotoPreview');

            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = function (e) {
                    preview.src = e.target.result;
                    preview.style.display = 'block';
                };
                reader.readAsDataURL(input.files[0]);
            } else {
                preview.src = '';
                preview.style.display = 'none';
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            // Popup
            var form = document.querySelector('#editMovieForm');
            if (form) {
                form.addEventListener('submit', function (event) {
                    event.preventDefault(); // Formun varsayılan gönderimini engelle
                    var formData = new FormData(form);

                    fetch(form.action, {
                        method: 'POST',
                        body: formData
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                alert('Edit Confirmed.');
                                window.location.href = '/AdminPanel/MovieList'; // Başarıyla yönlendirme
                            } else {
                                alert('There has been a problem while editing.');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            alert('There has been a problem while editing.');
                        });
                });
            }

            // Aktör Baloncukları
            var actorsSelect = document.getElementById('actorsSelect');
            var selectedActorsContainer = document.getElementById('selectedActorsContainer');

            actorsSelect.addEventListener('change', function () {
                var selectedValue = actorsSelect.value;
                var selectedText = actorsSelect.options[actorsSelect.selectedIndex].text;

                if (selectedValue && !document.getElementById('actor-chip-' + selectedValue)) {
                    var chip = createChip(selectedText, selectedValue, 'actor-chip-', 'selectedActorsContainer', 'SelectedActorIds');
                    selectedActorsContainer.appendChild(chip);
                }

                actorsSelect.value = ''; // Seçimi temizle
            });

            // Kategori Baloncukları
            var categoriesSelect = document.getElementById('categoriesSelect');
            var selectedCategoriesContainer = document.getElementById('selectedCategoriesContainer');

            categoriesSelect.addEventListener('change', function () {
                var selectedValue = categoriesSelect.value;
                var selectedText = categoriesSelect.options[categoriesSelect.selectedIndex].text;

                if (selectedValue && !document.getElementById('category-chip-' + selectedValue)) {
                    var chip = createChip(selectedText, selectedValue, 'category-chip-', 'selectedCategoriesContainer', 'SelectedCategoryIds');
                    selectedCategoriesContainer.appendChild(chip);
                }

                categoriesSelect.value = ''; // Seçimi temizle
            });

            function createChip(text, value, idPrefix, containerId, hiddenFieldName) {
                var chip = document.createElement('div');
                chip.className = 'chip';
                chip.id = idPrefix + value;
                chip.innerHTML = text + '<span class="closebtn" onclick="removeChip(\'' + value + '\', \'' + idPrefix + '\', \'' + containerId + '\')">&times;</span>';

                // Gizli alan ekle
                var hiddenInput = document.createElement('input');
                hiddenInput.type = 'hidden';
                hiddenInput.name = hiddenFieldName;
                hiddenInput.value = value;
                chip.appendChild(hiddenInput);

                return chip;
            }

            window.removeChip = function (value, idPrefix, containerId) {
                var chip = document.getElementById(idPrefix + value);
                if (chip) {
                    chip.parentNode.removeChild(chip);
                }
            };
        });
    </script>
}

<style>
    .old-photo-preview {
        max-width: 100%;
        height: auto;
    }
    .new-photo-preview {
        max-width: 100%;
        height: auto;
        display: none; /* Başlangıçta gizli */
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-control {
        resize: horizontal;
    }

    .form-group label {
        font-weight: bold;
        margin-bottom: 0.5rem;
    }

    .btn-lg {
        padding: 0.5rem 1rem;
    }

    .text-center {
        text-align: center;
    }

    .chip {
        display: inline-block;
        padding: 0 10px;
        background-color: #f1f1f1;
        border-radius: 25px;
        font-size: 14px;
        color: #333;
        margin: 5px;
        white-space: nowrap;
    }

        .chip .closebtn {
            margin-left: 10px;
            color: #aaa;
            font-weight: bold;
            cursor: pointer;
        }

            .chip .closebtn:hover {
                color: #000;
            }

    .card-body {
        display: flex;
        align-items: flex-start;
        justify-content: space-between;
    }

        .card-body .row {
            width: 100%;
        }
</style>